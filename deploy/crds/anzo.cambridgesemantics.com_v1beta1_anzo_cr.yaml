apiVersion: anzo.cambridgesemantics.com/v1beta1
kind: Anzo
metadata:
  name: a01
spec:
  #Number of pod/s to be deployed for AnzoAgent or AnzoServer.
  #Only allowed value is 1.
  size: 1

  #Details of image to be used for Anzo deployment
  image:
    registry: "docker.io"
    name: "cambridgesemantics/anzo"
    tag: "5.2.0-latest-nightly"
    pullPolicy: "IfNotPresent"

  serviceAccountName: anzo-operator

  #Mode of deployment for Anzo. Default is true for AnzoServer and false for AnzoAgent.
  #jsonActivation: true

  tolerations:
  - key: "node.kubernetes.io/not-ready"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 600
  - key: "node.kubernetes.io/unreachable"
    operator: "Exists"
    effect: "NoExecute"
    tolerationSeconds: 600

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
            - key: node-purpose
              operator: In
              values:
              - anzo

  resources:
    requests:
      cpu: "2000m"
      memory: "7340M"
    limits:
      cpu: "16000m"
      memory: "50331M"

  # Role of current Anzo CR, AnzoAgent or AnzoServer(standalone deployment)
  role: AnzoAgent

  #If user wants to use existing secret to authenticate with Anzo, please enter name below.
  #NOTE: secret should in the same namespace as CR.
  #If not specified, operator will generate random secret containing credentials for Anzo.
  #credentials: "mysecret"

  #User can specify string of valid Anzo license obtained from Cambridge Semantics.
  #license: "<license-as-string>"

  #Specify Mac ID associated with license, if any.
  #macID: "<mac-id-as-string>"

  #service:
  #  metadata:
  #    annotations:
  #      cloud.google.com/load-balancer-type: "Internal"
  # Sample annotation for internal load balancer on AWS
  #      service.beta.kubernetes.io/aws-load-balancer-internal: "false"
  # Annotation for Azure internal load balancer
  #      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  # Enter custom service specification like ports, source ip ranges, lb ip details in spec section below.
  #  spec:

  # bootProperties parameter allows user to customize contents of boot properties files required
  # at the time of Anzo installation. Refer below for the format.
  #bootProperties:
    #combus.properties.file: |
    #  < '=' seperated contents of properties file>
    #licensemanager.properties.file: |
    #  < '=' seperated contents of properties file>

  #Specify amount of memory to be allocated to JVM. Should be less than memory requests for pod.
  #If not specified, the calculated JVM memory is (pod memory - 1024M)
  #jvmMemory:

  #User can mount existing NFS share paths inside Anzo container deployed via this CR.
  #Multiple NFS mounts can be done at once, specify list of volumes in 'volumes' section below
  #as per format specified.
  #volumes:
  #- name: nfs1
  #  mountPath: "/opt/nfs1"
  #  pv:
  #    capacity:
  #      storage: 5Gi
  #    accessModes:
  #    - ReadWriteOnce
  #    storageClassName: ""
  #    persistentVolumeReclaimPolicy: Retain
  #    nfs:
  #      path: "/var/nfsshare"
  #      server: 10.108.0.4
  #      readOnly: false
  #  pvc:
  #    accessModes:
  #    - ReadWriteOnce
  #    storageClassName: ""
  #    resources:
  #      requests:
  #        storage: 2Gi
